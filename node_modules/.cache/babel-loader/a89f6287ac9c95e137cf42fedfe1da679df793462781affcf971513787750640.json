{"ast":null,"code":"// /src/services/productService.js\nimport axios from 'axios';\nconst url = process.env.REACT_APP_API_URL;\nconst transactionService = {\n  findByUser: async data => {\n    try {\n      const response = await axios.get(`${url}/transaction/getbypagebyuser?page=${data.page}&size=${data.size}&userid=${data.UserId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  findone: async id => {\n    try {\n      const response = await axios.get(`${url}/transaction/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await axios.delete(`${url}/transaction/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  update: async (id, value) => {\n    try {\n      console.log(`${id}, ${value}`);\n      const response = await axios.put(`${url}/transaction/${id}`, {\n        quantity: value\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  getAllByPage: async data => {\n    try {\n      console.log(data);\n      const response = await axios.get(`${url}/transaction/findallbylbypage?page=${data.page}&size=${data.size}&categoryname=${data.categoryname}`);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  }\n\n  // ... other product-related API calls\n};\n\nexport default transactionService;","map":{"version":3,"names":["axios","url","process","env","REACT_APP_API_URL","transactionService","findByUser","data","response","get","page","size","UserId","error","console","findone","id","delete","update","value","log","put","quantity","getAllByPage","categoryname"],"sources":["D:/code/ngon ngu kich ban/frontend-sell-account/src/services/transactionService.jsx"],"sourcesContent":["// /src/services/productService.js\r\nimport axios from 'axios';\r\n\r\n\r\nconst url = process.env.REACT_APP_API_URL;\r\n\r\nconst transactionService = {\r\n    findByUser: async(data) => {\r\n        try {\r\n\r\n            const response = await axios.get(`${url}/transaction/getbypagebyuser?page=${data.page}&size=${data.size}&userid=${data.UserId}`);\r\n\r\n            return response.data;\r\n        } catch(error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n    findone: async (id) => {\r\n        try {\r\n\r\n            const response = await axios.get(`${url}/transaction/${id}`);\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n    delete: async (id) => {\r\n        try {\r\n            const response = await axios.delete(`${url}/transaction/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n\r\n    },\r\n    update: async (id, value) => {\r\n        try {\r\n\r\n            console.log(`${id}, ${value}`)\r\n            const response = await axios.put(`${url}/transaction/${id}`, { quantity: value });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n\r\n    getAllByPage: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.get(`${url}/transaction/findallbylbypage?page=${data.page}&size=${data.size}&categoryname=${data.categoryname}`);\r\n            console.log(response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n\r\n\r\n    // ... other product-related API calls\r\n};\r\n\r\nexport default transactionService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,kBAAkB,GAAG;EACvBC,UAAU,EAAE,MAAMC,IAAI,IAAK;IACvB,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,qCAAoCM,IAAI,CAACG,IAAK,SAAQH,IAAI,CAACI,IAAK,WAAUJ,IAAI,CAACK,MAAO,EAAC,CAAC;MAEhI,OAAOJ,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAMM,KAAK,EAAE;MACXC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ,CAAC;EACDE,OAAO,EAAE,MAAOC,EAAE,IAAK;IACnB,IAAI;MAEA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,gBAAee,EAAG,EAAC,CAAC;MAE5D,OAAOR,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ,CAAC;EACDI,MAAM,EAAE,MAAOD,EAAE,IAAK;IAClB,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,MAAM,CAAE,GAAEhB,GAAI,gBAAee,EAAG,EAAC,CAAC;MAC/D,OAAOR,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EAEJ,CAAC;EACDK,MAAM,EAAE,MAAAA,CAAOF,EAAE,EAAEG,KAAK,KAAK;IACzB,IAAI;MAEAL,OAAO,CAACM,GAAG,CAAE,GAAEJ,EAAG,KAAIG,KAAM,EAAC,CAAC;MAC9B,MAAMX,QAAQ,GAAG,MAAMR,KAAK,CAACqB,GAAG,CAAE,GAAEpB,GAAI,gBAAee,EAAG,EAAC,EAAE;QAAEM,QAAQ,EAAEH;MAAM,CAAC,CAAC;MACjF,OAAOX,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ,CAAC;EAGDU,YAAY,EAAE,MAAOhB,IAAI,IAAK;IAC1B,IAAI;MACAO,OAAO,CAACM,GAAG,CAACb,IAAI,CAAC;MACjB,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,sCAAqCM,IAAI,CAACG,IAAK,SAAQH,IAAI,CAACI,IAAK,iBAAgBJ,IAAI,CAACiB,YAAa,EAAC,CAAC;MAC7IV,OAAO,CAACM,GAAG,CAACZ,QAAQ,CAACD,IAAI,CAAC;MAC1B,OAAOC,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ;;EAIA;AACJ,CAAC;;AAED,eAAeR,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}