{"ast":null,"code":"// /src/services/productService.js\nimport axios from 'axios';\nconst url = process.env.REACT_APP_API_URL;\nconst cartService = {\n  getCartByUser: async id => {\n    try {\n      const response = await axios.get(`${url}/product/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  addToCart: async plan => {\n    try {\n      console.log(plan);\n      const response = await axios.post(`${url}/cart`, {\n        plan\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  getAllProductsByPage: async data => {\n    try {\n      console.log(data);\n      const response = await axios.get(`${url}/product/findallbylbypage?page=${data.page}&size=${data.size}&categoryname=${data.categoryname}`);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  }\n\n  // ... other product-related API calls\n};\n\nexport default cartService;","map":{"version":3,"names":["axios","url","process","env","REACT_APP_API_URL","cartService","getCartByUser","id","response","get","data","error","console","addToCart","plan","log","post","getAllProductsByPage","page","size","categoryname"],"sources":["D:/store/learn/ngôn ngữ kịch bản/frontend/sell-account/src/services/cartService.jsx"],"sourcesContent":["// /src/services/productService.js\r\nimport axios from 'axios';\r\n\r\n\r\nconst url = process.env.REACT_APP_API_URL;\r\n\r\nconst cartService = {\r\n    getCartByUser: async (id) => {\r\n        try {\r\n\r\n            const response = await axios.get(`${url}/product/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n    addToCart: async(plan) => {\r\n        try {\r\n\r\n            console.log(plan)\r\n            const response = await axios.post(`${url}/cart`,{plan});\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n\r\n    getAllProductsByPage: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.get(`${url}/product/findallbylbypage?page=${data.page}&size=${data.size}&categoryname=${data.categoryname}`);\r\n            console.log(response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n\r\n\r\n    // ... other product-related API calls\r\n};\r\n\r\nexport default cartService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,WAAW,GAAG;EAChBC,aAAa,EAAE,MAAOC,EAAE,IAAK;IACzB,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,YAAWM,EAAG,EAAC,CAAC;MACxD,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ,CAAC;EACDE,SAAS,EAAE,MAAMC,IAAI,IAAK;IACtB,IAAI;MAEAF,OAAO,CAACG,GAAG,CAACD,IAAI,CAAC;MACjB,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAE,GAAEf,GAAI,OAAM,EAAC;QAACa;MAAI,CAAC,CAAC;MACvD,OAAON,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ,CAAC;EAGDM,oBAAoB,EAAE,MAAOP,IAAI,IAAK;IAClC,IAAI;MACAE,OAAO,CAACG,GAAG,CAACL,IAAI,CAAC;MACjB,MAAMF,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,kCAAiCS,IAAI,CAACQ,IAAK,SAAQR,IAAI,CAACS,IAAK,iBAAgBT,IAAI,CAACU,YAAa,EAAC,CAAC;MACzIR,OAAO,CAACG,GAAG,CAACP,QAAQ,CAACE,IAAI,CAAC;MAC1B,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ;;EAIA;AACJ,CAAC;;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}