{"ast":null,"code":"// /src/services/productService.js\nimport axios from 'axios';\nconst url = process.env.REACT_APP_API_URL;\nconst accountService = {\n  create: async data => {\n    try {\n      console.log(data);\n      const response = await axios.post(`${url}/account/`, data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching :', error);\n      throw error;\n    }\n  },\n  findAllAccountSubscriptonplanProductByPage: async data => {\n    try {\n      console.log(data);\n      const data = await accountService.findAllAccountSubscriptonplanProductByPage({\n        page: pageNumber,\n        size: 10,\n        information: ''\n      });\n      setPaginationArray(pagination(data.currentPage, data.totalPages));\n      setAccounts(data);\n    } catch (error) {\n      console.error('Error fetching :', error);\n      throw error;\n    }\n  },\n  findOne: async data => {\n    try {\n      console.log(data);\n      const response = await axios.get(`${url}/account/${data.id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching :', error);\n      throw error;\n    }\n  },\n  delete: async data => {\n    try {\n      console.log(data);\n      const response = await axios.delete(`${url}/account/${data.id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching :', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      console.log(data);\n      const response = await axios.put(`${url}/account/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching :', error);\n      throw error;\n    }\n  }\n};\nexport default accountService;","map":{"version":3,"names":["axios","url","process","env","REACT_APP_API_URL","accountService","create","data","console","log","response","post","error","findAllAccountSubscriptonplanProductByPage","page","pageNumber","size","information","setPaginationArray","pagination","currentPage","totalPages","setAccounts","findOne","get","id","delete","update","put"],"sources":["D:/code/ngon ngu kich ban/frontend-sell-account/src/services/accountService.jsx"],"sourcesContent":["// /src/services/productService.js\r\nimport axios from 'axios';\r\n\r\n\r\nconst url = process.env.REACT_APP_API_URL;\r\n\r\nconst accountService = {\r\n    create: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.post(`${url}/account/`, data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching :', error);\r\n            throw error;\r\n        }\r\n    },\r\n    findAllAccountSubscriptonplanProductByPage: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const data = await accountService.findAllAccountSubscriptonplanProductByPage({ page: pageNumber, size: 10,information:'' });\r\n        setPaginationArray(pagination(data.currentPage, data.totalPages));\r\n        setAccounts(data);\r\n        } catch (error) {\r\n            console.error('Error fetching :', error);\r\n            throw error;\r\n        }\r\n    },\r\n    findOne: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.get(`${url}/account/${data.id}` );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching :', error);\r\n            throw error;\r\n        }\r\n    },\r\n    delete: async (data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.delete(`${url}/account/${data.id}` );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching :', error);\r\n            throw error;\r\n        }\r\n    },\r\n    update: async (id,data) => {\r\n        try {\r\n            console.log(data)\r\n            const response = await axios.put(`${url}/account/${id}`,data );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching :', error);\r\n            throw error;\r\n        }\r\n    },\r\n    \r\n};\r\nexport default accountService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,MAAOC,IAAI,IAAK;IACpB,IAAI;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEV,GAAI,WAAU,EAAEM,IAAI,CAAC;MAC1D,OAAOG,QAAQ,CAACH,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EACDC,0CAA0C,EAAE,MAAON,IAAI,IAAK;IACxD,IAAI;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMA,IAAI,GAAG,MAAMF,cAAc,CAACQ,0CAA0C,CAAC;QAAEC,IAAI,EAAEC,UAAU;QAAEC,IAAI,EAAE,EAAE;QAACC,WAAW,EAAC;MAAG,CAAC,CAAC;MAC/HC,kBAAkB,CAACC,UAAU,CAACZ,IAAI,CAACa,WAAW,EAAEb,IAAI,CAACc,UAAU,CAAC,CAAC;MACjEC,WAAW,CAACf,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EACDW,OAAO,EAAE,MAAOhB,IAAI,IAAK;IACrB,IAAI;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACwB,GAAG,CAAE,GAAEvB,GAAI,YAAWM,IAAI,CAACkB,EAAG,EAAE,CAAC;MAC9D,OAAOf,QAAQ,CAACH,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EACDc,MAAM,EAAE,MAAOnB,IAAI,IAAK;IACpB,IAAI;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAAC0B,MAAM,CAAE,GAAEzB,GAAI,YAAWM,IAAI,CAACkB,EAAG,EAAE,CAAC;MACjE,OAAOf,QAAQ,CAACH,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EACDe,MAAM,EAAE,MAAAA,CAAOF,EAAE,EAAClB,IAAI,KAAK;IACvB,IAAI;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAAC4B,GAAG,CAAE,GAAE3B,GAAI,YAAWwB,EAAG,EAAC,EAAClB,IAAK,CAAC;MAC9D,OAAOG,QAAQ,CAACH,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ;AAEJ,CAAC;AACD,eAAeP,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}